SELECT*FROM students;
SELECT first_name FROM students;
SELECT first_name, last_name, gpa FROM students;
SELECT first_name, last_name, gpa FROM students WHERE gpa < 2.5;
SELECT first_name, last_name, gpa FROM students WHERE gpa >= 3.8;
SELECT first_name, last_name, gpa FROM students WHERE gpa != 4.0;
SELECT*FROM majors;
SELECT*FROM majors WHERE major='Game Design';
SELECT*FROM majors WHERE major!='Game Design';
SELECT*FROM majors WHERE major > 'Game Design';
SELECT*FROM majors WHERE major <  'G';
SELECT*FROM students WHERE last_name < 'M';
SELECT*FROM students WHERE last_name < 'M' OR gpa = 3.9;
SELECT*FROM students WHERE last_name < 'M' AND gpa = 3.9;
SELECT*FROM students WHERE last_name < 'M' AND gpa = 3.9 OR gpa < 2.3;
SELECT*FROM students WHERE last_name < 'M' AND(gpa = 3.9 OR gpa < 2.3);
SELECT*FROM courses WHERE course LIKE '_lgorithms';
SELECT*FROM courses WHERE course LIKE '%lgorithms';
SELECT*FROM courses WHERE course LIKE 'Web%';
SELECT*FROM courses WHERE course LIKE '_e%';
SELECT*FROM courses WHERE course LIKE '% %';
SELECT*FROM courses WHERE course NOT LIKE '% %';
SELECT*FROM courses WHERE course LIKE '%A%';
SELECT*FROM courses WHERE course ILIKE '%A%';
SELECT*FROM courses WHERE course NOT ILIKE '%A%';
SELECT*FROM courses WHERE course NOT ILIKE '%A%' AND course LIKE '% %';
SELECT*FROM students WHERE gpa IS NULL;
SELECT*FROM students WHERE gpa IS NOT NULL;
SELECT*FROM students WHERE major_id IS NULL;
SELECT*FROM students WHERE major_id IS NULL AND gpa IS NOT NULL;
SELECT*FROM students WHERE major_id IS NULL AND gpa IS NULL;
SELECT*FROM students ORDER BY gpa;
SELECT*FROM students ORDER BY gpa DESC;
SELECT*FROM students ORDER BY gpa DESC, first_name;
SELECT*FROM students ORDER BY gpa DESC, first_name LIMIT 10;
SELECT*FROM students WHERE gpa IS NOT NULL ORDER BY gpa DESC, first_name LIMIT 10;
SELECT MIN(gpa) FROM students;
SELECT MAX(gpa) FROM students;
SELECT SUM(major_id) FROM students;
SELECT AVG(major_id) FROM students;
SELECT CEIL(AVG(major_id)) FROM students;
SELECT ROUND(AVG(major_id)) FROM students;
SELECT ROUND(AVG(major_id), 5) FROM students;
SELECT COUNT(*) FROM majors;
SELECT COUNT(*) FROM students;
SELECT COUNT(major_id) FROM students;
SELECT DISTINCT(major_id) FROM students;
SELECT major_id FROM students GROUP BY major_id;
SELECT major_id, COUNT(*) FROM students GROUP BY major_id;
SELECT major_id, MIN(gpa) FROM students GROUP BY major_id;
SELECT major_id, MIN(gpa), MAX(gpa) FROM students GROUP BY major_id;
SELECT major_id, MIN(gpa), MAX(gpa) FROM students GROUP BY major_id HAVING MAX(gpa) = 4.0;
SELECT major_id, MIN(gpa) AS min_gpa, MAX(gpa) FROM students GROUP BY major_id HAVING MAX(gpa) = 4.0;
SELECT major_id, MIN(gpa) AS min_gpa, MAX(gpa) AS max_gpa  FROM students GROUP BY major_id HAVING MAX(gpa) = 4.0;
SELECT major_id, COUNT(*) AS number_of_students FROM students GROUP BY major_id;
SELECT major_id, COUNT(*) AS number_of_students FROM students GROUP BY major_id HAVING COUNT(*) < 8;
SELECT*FROM students FULL JOIN majors ON students.major_id=majors.major_id;
SELECT*FROM students LEFT JOIN majors ON students.major_id=majors.major_id;
SELECT*FROM students RIGHT JOIN majors ON students.major_id=majors.major_id;
SELECT*FROM students INNER JOIN majors ON students.major_id=majors.major_id;
SELECT*FROM majors LEFT JOIN students ON majors.major_id=students.major_id;
SELECT*FROM majors INNER JOIN students ON majors.major_id=students.major_id;
SELECT*FROM majors RIGHT JOIN students ON majors.major_id=students.major_id;
SELECT*FROM majors FULL JOIN students ON majors.major_id=students.major_id;
SELECT major FROM majors INNER JOIN students ON majors.major_id=students.major_id;
SELECT DISTINCT(major) FROM majors INNER JOIN students ON majors.major_id=students.major_id;
SELECT * FROM students RIGHT JOIN majors ON students.major_id = majors.major_id WHERE student_id IS NULL;
SELECT major FROM students RIGHT JOIN majors ON students.major_id = majors.major_id WHERE student_id IS NULL;
SELECT * FROM students LEFT JOIN majors ON students.major_id = majors.major_id WHERE major='Data Science' OR gpa >= 3.8;
SELECT first_name, last_name, major, gpa FROM students LEFT JOIN majors ON students.major_id = majors.major_id WHERE major='Data Science' OR gpa >= 3.8;
SELECT * FROM students FULL JOIN majors ON students.major_id = majors.major_id WHERE first_name LIKE '%ri%' OR major LIKE '%ri%';
SELECT first_name, major FROM students FULL JOIN majors ON students.major_id = majors.major_id WHERE first_name LIKE '%ri%' OR major LIKE '%ri%';
SELECT students.major_id FROM students FULL JOIN majors ON students.major_id=majors.major_id;
SELECT s.major_id FROM students AS s FULL JOIN majors AS m ON s.major_id = m.major_id;
SELECT*FROM students FULL JOIN majors USING(major_id);
SELECT*FROM students FULL JOIN majors USING(major_id) FULL JOIN majors_courses USING(major_id);
SELECT*FROM students FULL JOIN majors USING(major_id) FULL JOIN majors_courses USING(major_id) FULL JOIN courses USING(course_id);
SELECT DISTINCT(course) FROM students RIGHT JOIN majors USING(major_id) INNER JOIN majors_courses USING(major_id) INNER JOIN courses USING(course_id) WHERE (first_name = 'Obie' AND last_name = 'Hilpert') OR student_id IS NULL ORDER BY course DESC;
SELECT course FROM students RIGHT JOIN majors USING(major_id) INNER JOIN majors_courses USING(major_id) INNER JOIN courses USING(course_id) GROUP BY course HAVING COUNT(student_id) = 1 ORDER BY course;
